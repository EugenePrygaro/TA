const express = require('express');
const router = express.Router();
const Tour = require('../models/Tour'); // –ú–æ–¥–µ–ª—å —Ç—É—Ä—É

// üìå –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —Ç—É—Ä–∏
router.get('/', async (req, res) => {
    try {
        const tours = await Tour.findAll();
        res.json(tours);
    } catch (error) {
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—É—Ä—ñ–≤' });
    }
});

// üìå –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —Ç—É—Ä
router.post('/', async (req, res) => {
    try {
        const { title, direction, description, price } = req.body;
        const newTour = await Tour.create({ title, direction, description, price });
        res.status(201).json(newTour);
    } catch (error) {
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—É—Ä—É' });
    }
});

// üìå –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç—É—Ä –∑–∞ ID
router.get('/:id', async (req, res) => {
    try {
        const tour = await Tour.findByPk(req.params.id);
        if (!tour) return res.status(404).json({ error: '–¢—É—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });
        res.json(tour);
    } catch (error) {
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—É—Ä—É' });
    }
});


// üìå –í–∏–¥–∞–ª–∏—Ç–∏ —Ç—É—Ä
router.delete('/:id', async (req, res) => {
    try {
        const tour = await Tour.findByPk(req.params.id);
        if (!tour) return res.status(404).json({ error: '–¢—É—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });

        await tour.destroy();
        res.json({ message: '–¢—É—Ä –≤–∏–¥–∞–ª–µ–Ω–æ' });
    } catch (error) {
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç—É—Ä—É' });
    }
});

module.exports = router;
